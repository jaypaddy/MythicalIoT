# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: ACR_ADDRESS
  value: paddycontainers.azurecr.io
- name: ACR_PASSWORD
  value: Rfb1vT9QuW=x2v3Z37jKFYNCg11uoT9Y
- name: ACR_USER
  value: paddycontainers


steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'
    addToPath: true
    architecture: 'x64'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      sudo apt-get update 
      sudo apt-get install -y --no-install-recommends libcurl4-openssl-dev libboost-python1.58-dev libpython3-dev
      python -m pip install setuptools
      python -m pip install ptvsd==4.1.3

- task: AzureIoTEdge@2
  inputs:
    action: 'Build module images'
    templateFilePath: '**/deployment.debug.template.json'
    defaultPlatform: 'amd64'
- task: CopyFiles@2
  inputs:
    Contents: |
      **/deployment.debug.template.json
      **/module.json
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'